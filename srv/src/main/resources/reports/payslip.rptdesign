<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.13.0.v202303021806</property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">120</property>
    <parameters>
        <scalar-parameter name="name" id="296">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="designation" id="297">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="department" id="298">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="location" id="299">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="joining Date" id="300">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">date</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">General Date</property>
                <property name="pattern">General Date</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="effective Work Days" id="301">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lop" id="302">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="employeeNo" id="316">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="bankName" id="317">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="bankAccountNo" id="318">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="panNumber" id="319">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="emiratesId" id="320">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="total Earnings INR" id="738">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="total Deductions INR" id="739">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="net Pay for the month" id="740">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant"></value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="payslipDB" id="328">
            <list-property name="userProperties">
                <structure>
                    <property name="name">script_type</property>
                    <property name="type">string</property>
                    <property name="default">me.prettyprint.hector</property>
                </structure>
            </list-property>
        </script-data-source>
    </data-sources>
    <data-sets>
        <script-data-set name="items" id="349">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">name</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">id</property>
                    <text-property name="displayName">ID</text-property>
                </structure>
                <structure>
                    <property name="columnName">name</property>
                    <text-property name="displayName">Name</text-property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">payslipDB</property>
            <method name="open"><![CDATA[importPackage(Packages.java.util);

var itemsList = reportContext.getAppContext().get("items");

if (itemsList != null &amp;&amp; itemsList.size() > 0) {
    itemsIterator = itemsList.iterator();
} else {
    itemsIterator = new java.util.ArrayList().iterator();
}
]]></method>
            <method name="fetch"><![CDATA[if (!itemsIterator.hasNext()) {
    return false;
}

var item = itemsIterator.next();
row["id"] = item.getId();
row["name"] = item.getName();
row["documentDate"] = item.getDocumentDate();
return true;
]]></method>
        </script-data-set>
        <script-data-set name="payslip" id="543">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">earnings</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">master</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">actual</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">deductions</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">actuals</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">earnings</property>
                    <text-property name="displayName">Earnings</text-property>
                </structure>
                <structure>
                    <property name="columnName">master</property>
                    <text-property name="displayName">Master</text-property>
                </structure>
                <structure>
                    <property name="columnName">actual</property>
                    <text-property name="displayName">Actual</text-property>
                </structure>
                <structure>
                    <property name="columnName">deductions</property>
                    <text-property name="displayName">Deductions</text-property>
                </structure>
                <structure>
                    <property name="columnName">actuals</property>
                    <text-property name="displayName">Actuals</text-property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">earnings</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">master</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">actual</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">deductions</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">actuals</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">payslipDB</property>
            <method name="open"><![CDATA[importPackage(Packages.java.util);

var itemsList = reportContext.getAppContext().get("payslip");

if (itemsList != null &amp;&amp; itemsList.size() > 0) {
    itemsIterator = itemsList.iterator();
} else {
    itemsIterator = new java.util.ArrayList().iterator();
}
]]></method>
            <method name="fetch"><![CDATA[if (!itemsIterator.hasNext()) {
    return false;
}

var item = itemsIterator.next();

row["earnings"] = item.getEarnings();
row["master"] = item.getMaster();
row["actual"] = item.getActual();
row["deductions"] = item.getDeductions();
row["actuals"] = item.getActuals();

return true;
]]></method>
        </script-data-set>
        <script-data-set name="payslipEarnings" id="593">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">earnings</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">master</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">actual</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">deductions</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">actuals</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">earnings</property>
                    <text-property name="displayName">Earnings</text-property>
                </structure>
                <structure>
                    <property name="columnName">master</property>
                    <text-property name="displayName">Master</text-property>
                </structure>
                <structure>
                    <property name="columnName">actual</property>
                    <text-property name="displayName">Actual</text-property>
                </structure>
                <structure>
                    <property name="columnName">deductions</property>
                    <text-property name="displayName">Deductions</text-property>
                </structure>
                <structure>
                    <property name="columnName">actuals</property>
                    <text-property name="displayName">Actuals</text-property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">earnings</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">master</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">actual</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">deductions</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">actuals</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">payslipDB</property>
            <method name="open"><![CDATA[importPackage(Packages.java.util);
 
var reportData = reportContext.getAppContext().get("payslip");

if (reportData != null &amp;&amp; reportData["payslipEarnings"] != null) {

    payslipEarnings = reportData["payslipEarnings"].iterator();

} else {

    payslipEarnings = java.util.Collections.emptyIterator();

}

 ]]></method>
            <method name="fetch"><![CDATA[if (payslipEarnings  == null || !payslipEarnings.hasNext()) {
    return false;
}
var items = payslipEarnings.next();
row["earnings"] = items.getEarnings();
row["master"] = items.getMaster();
row["actual"] = items.getActual();
row["deductions"] = items.getDeductions();
row["actuals"] = items.getActuals();
return true;]]></method>
        </script-data-set>
        <script-data-set name="imagesDS" id="770">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">imagesName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">imagesData</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">imagesName</property>
                </structure>
                <structure>
                    <property name="columnName">imagesData</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">imagesName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">imagesData</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">payslipDB</property>
            <method name="open"><![CDATA[importPackage(Packages.java.util);

var itemsList = reportContext.getAppContext().get("imagesDS");

if (itemsList != null &amp;&amp; itemsList.size() > 0) {
    itemsIterator = itemsList.iterator();
} else {
    itemsIterator = new java.util.ArrayList().iterator();
}
]]></method>
            <method name="fetch"><![CDATA[if (!itemsIterator.hasNext()) {
    return false;
}
var item = itemsIterator.next();
row["imagesName"] = item.getImagesName();
row["imagesData"] = item.getImagesData();
return true;
]]></method>
        </script-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <page-footer>
                <text id="3">
                    <property name="contentType">html</property>
                </text>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <image id="425">
            <property name="marginTop">0in</property>
            <property name="height">0.6083333333333333in</property>
            <property name="width">2.425in</property>
            <property name="source">embed</property>
            <property name="imageName">Screenshot 2025-06-26 153938.png</property>
        </image>
        <label id="4">
            <property name="fontSize">18pt</property>
            <property name="fontWeight">bold</property>
            <property name="marginTop">0.1in</property>
            <property name="paddingLeft">150px</property>
            <property name="paddingBottom">25px</property>
            <property name="textAlign">center</property>
            <text-property name="text">Inflexion Infotech Private limited</text-property>
        </label>
        <label id="5">
            <property name="paddingLeft">150px</property>
            <property name="paddingBottom">50px</property>
            <property name="textAlign">center</property>
            <text-property name="text"> 3M-409, 2nd Floor,Kasthoori Plaza, Kasturinagar,Above&#13;
 HDFC Bank on outer ring road, Bangalore 560043</text-property>
        </label>
        <label id="6">
            <property name="paddingLeft">100px</property>
            <property name="paddingBottom">50px</property>
            <property name="paddingRight">60px</property>
            <property name="textAlign">center</property>
            <text-property name="text"> Payslip for the month of December 2023</text-property>
        </label>
        <grid id="186">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
            <property name="marginTop">0.2in</property>
            <property name="marginLeft">5mm</property>
            <property name="marginRight">5mm</property>
            <property name="paddingLeft">100px</property>
            <property name="paddingBottom">100px</property>
            <column id="187"/>
            <column id="188"/>
            <row id="189">
                <cell id="190">
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="paddingLeft">28px</property>
                    <text id="210">
                        <property name="paddingLeft">10px</property>
                        <property name="paddingRight">5px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Name :                           <VALUE-OF>{params["name"].value?params["name"].value:"Dummy"}</VALUE-OF>]]></text-property>
                    </text>
                </cell>
                <cell id="191">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                    <text id="217">
                        <property name="paddingLeft">10px</property>
                        <property name="paddingRight">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Employee No:                    <VALUE-OF>{params["employeeNo"].value?params["employeeNo"].value:"Dummy"}</VALUE-OF>]]></text-property>
                    </text>
                </cell>
            </row>
            <row id="192">
                <cell id="193">
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="paddingLeft">28px</property>
                    <text id="211">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Joining Date:                   <VALUE-OF>{params["joining Date"].value?params["joining Date"].value:"Dummy"}</VALUE-OF>]]></text-property>
                    </text>
                </cell>
                <cell id="194">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                    <text id="218">
                        <property name="paddingLeft">10px</property>
                        <property name="paddingRight">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Bank Name:                      <VALUE-OF>{params["bankName"].value?params["bankName"].value:"Dummy"}</VALUE-OF>
]]></text-property>
                    </text>
                </cell>
            </row>
            <row id="195">
                <cell id="196">
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="paddingLeft">28px</property>
                    <text id="212">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Designation:                    <VALUE-OF>{params["designation"].value?params["designation"].value:"Dummy"}</VALUE-OF>
]]></text-property>
                    </text>
                </cell>
                <cell id="197">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                    <text id="219">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Bank Account No:                <VALUE-OF>{params["bankAccountNo"].value?params["bankAccountNo"].value:"Dummy"}</VALUE-OF>
]]></text-property>
                    </text>
                </cell>
            </row>
            <row id="198">
                <cell id="199">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                    <text id="213">
                        <property name="borderBottomStyle">none</property>
                        <property name="borderLeftStyle">none</property>
                        <property name="borderRightStyle">none</property>
                        <property name="borderTopStyle">none</property>
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Department:                      <VALUE-OF>{params["department"].value?params["department"].value:"Dummy"}</VALUE-OF>
]]></text-property>
                    </text>
                </cell>
                <cell id="200">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                    <text id="220">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[PAN Number:                     <VALUE-OF>{params["panNumber"].value?params["panNumber"].value:"Dummy"}</VALUE-OF>
]]></text-property>
                    </text>
                </cell>
            </row>
            <row id="201">
                <cell id="202">
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="paddingLeft">28px</property>
                    <text id="214">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Location:                       <VALUE-OF>{params["location"].value?params["location"].value:"Dummy"}</VALUE-OF>]]></text-property>
                    </text>
                </cell>
                <cell id="203">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                    <text id="221">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Emirates Id:                    <VALUE-OF>{params["emiratesId"].value?params["emiratesId"].value:"Dummy"}</VALUE-OF>

]]></text-property>
                    </text>
                </cell>
            </row>
            <row id="204">
                <cell id="205">
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="paddingLeft">28px</property>
                    <text id="215">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Effective Work Days:       <VALUE-OF>{params["effective Work Days"].value?params["effective Work Days"].value:"Dummy"}</VALUE-OF>]]></text-property>
                    </text>
                </cell>
                <cell id="206">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                </cell>
            </row>
            <row id="312">
                <cell id="313">
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                    <property name="paddingLeft">28px</property>
                    <text id="315">
                        <property name="paddingLeft">10px</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[LOP :                           <VALUE-OF>{params["lop"].value?params["lop"].value:"Dummy"}</VALUE-OF>]]></text-property>
                    </text>
                </cell>
                <cell id="314">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="paddingLeft">28px</property>
                </cell>
            </row>
        </grid>
        <table id="594">
            <property name="borderBottomStyle">none</property>
            <property name="borderLeftStyle">none</property>
            <property name="borderRightStyle">none</property>
            <property name="borderTopStyle">none</property>
            <property name="marginTop">0.3in</property>
            <property name="marginLeft">5mm</property>
            <property name="marginRight">5mm</property>
            <property name="dataSet">payslipEarnings</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">earnings</property>
                    <text-property name="displayName">Earnings</text-property>
                    <expression name="expression" type="javascript">dataSetRow["earnings"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">master</property>
                    <text-property name="displayName">Master</text-property>
                    <expression name="expression" type="javascript">dataSetRow["master"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">actual</property>
                    <text-property name="displayName">Actual</text-property>
                    <expression name="expression" type="javascript">dataSetRow["actual"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">deductions</property>
                    <text-property name="displayName">Deductions</text-property>
                    <expression name="expression" type="javascript">dataSetRow["deductions"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">actuals</property>
                    <text-property name="displayName">Actuals</text-property>
                    <expression name="expression" type="javascript">dataSetRow["actuals"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="623"/>
            <column id="624"/>
            <column id="625"/>
            <column id="626"/>
            <column id="627"/>
            <header>
                <row id="595">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <cell id="596">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="597">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <text-property name="text">Earnings</text-property>
                        </label>
                    </cell>
                    <cell id="598">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="599">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <text-property name="text">Master</text-property>
                        </label>
                    </cell>
                    <cell id="600">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="601">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <text-property name="text">Actual</text-property>
                        </label>
                    </cell>
                    <cell id="602">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="603">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <text-property name="text">Deductions</text-property>
                        </label>
                    </cell>
                    <cell id="604">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <label id="605">
                            <text-property name="text">Actuals</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="606">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <cell id="607">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="608">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <property name="resultSetColumn">earnings</property>
                        </data>
                    </cell>
                    <cell id="609">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="610">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <property name="resultSetColumn">master</property>
                        </data>
                    </cell>
                    <cell id="611">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="612">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <property name="resultSetColumn">actual</property>
                        </data>
                    </cell>
                    <cell id="613">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="614">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <property name="resultSetColumn">deductions</property>
                        </data>
                    </cell>
                    <cell id="615">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <data id="616">
                            <property name="resultSetColumn">actuals</property>
                        </data>
                    </cell>
                </row>
            </detail>
        </table>
        <grid id="703">
            <property name="marginTop">2in</property>
            <property name="marginLeft">5mm</property>
            <property name="marginRight">5mm</property>
            <column id="704"/>
            <column id="705"/>
            <column id="706"/>
            <column id="707"/>
            <column id="708"/>
            <row id="709">
                <cell id="710">
                    <label id="727">
                        <text-property name="text">Total Earnings:INR.</text-property>
                    </label>
                </cell>
                <cell id="711">
                    <data id="743">
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">total Earnings INR</property>
                                <expression name="expression" type="javascript">params["total Earnings INR"] &amp;&amp; params["total Earnings INR"] > 0 ?params["total Earnings INR"]:"Dummy";</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">total Earnings INR</property>
                    </data>
                </cell>
                <cell id="712">
                    <data id="744">
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">total Earnings INR</property>
                                <expression name="expression" type="javascript">params["total Earnings INR"] &amp;&amp; params["total Earnings INR"] > 0 ?params["total Earnings INR"]:"Dummy";</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">total Earnings INR</property>
                    </data>
                </cell>
                <cell id="713">
                    <label id="728">
                        <text-property name="text">Total Deductions:INR.</text-property>
                    </label>
                </cell>
                <cell id="714">
                    <data id="742">
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">total Deductions INR</property>
                                <expression name="expression" type="javascript">params["total Deductions INR"] &amp;&amp; params["total Deductions INR"] > 0?params["total Deductions INR"]:"Dumyy";</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">total Deductions INR</property>
                    </data>
                </cell>
            </row>
            <row id="715">
                <cell id="716">
                    <label id="729">
                        <text-property name="text">Net Pay for the month</text-property>
                    </label>
                </cell>
                <cell id="717">
                    <data id="741">
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">net Pay for the month</property>
                                <expression name="expression" type="javascript">params["net Pay for the month"] &amp;&amp; params["net Pay for the month"] > 0?params["net Pay for the month"]:"Dummy";</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">net Pay for the month</property>
                    </data>
                </cell>
                <cell id="718"/>
                <cell id="719"/>
                <cell id="720"/>
            </row>
        </grid>
        <label id="769">
            <property name="marginTop">0in</property>
            <property name="marginLeft">5mm</property>
            <property name="marginRight">5mm</property>
            <text-property name="text"> (Rupees Thirty Nine Thousand Three Hundred Six Only)</text-property>
        </label>
        <table id="790">
            <property name="borderBottomStyle">none</property>
            <property name="borderLeftStyle">none</property>
            <property name="borderRightStyle">none</property>
            <property name="borderTopStyle">none</property>
            <property name="dataSet">imagesDS</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">imageName</property>
                    <expression name="expression" type="javascript">org.apache.commons.codec.binary.Base64.decodeBase64(dataSetRow["imagesData"])</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">Data</property>
                    <expression name="expression" type="javascript">dataSetRow["imagesData"]</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <column id="803"/>
            <header>
                <row id="791">
                    <cell id="792"/>
                </row>
            </header>
            <detail>
                <row id="795">
                    <cell id="796">
                        <grid id="806">
                            <property name="borderBottomStyle">none</property>
                            <property name="borderLeftStyle">none</property>
                            <property name="borderRightStyle">none</property>
                            <property name="borderTopStyle">none</property>
                            <column id="807"/>
                            <row id="808">
                                <cell id="809">
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <data id="812">
                                        <property name="resultSetColumn">imageName</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="810">
                                <cell id="811">
                                    <property name="borderBottomStyle">none</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <data id="813">
                                        <property name="resultSetColumn">Data</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                </row>
            </detail>
        </table>
    </body>
    <list-property name="images">
        <structure>
            <property name="name">Screenshot 2025-06-26 153938.png</property>
            <property name="type">image/png</property>
            <property name="data">
                iVBORw0KGgoAAAANSUhEUgAAAkIAAACACAYAAADnGAaWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
                YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAGN8SURBVHhe7Z13nNRE/8c/k2TbNY4mzQ6KSBGkiQI+AtJB
                REGqDUURQbFLsXexFxBUiojt94j4qAhYQFFRAUF67/2O61uTzO+PS9a97KbubjjOvF+veSnZXCYzn/nO
                fDOVFBQU0NzcXJiF53mUlpZWuMYwDAghEAShwnWZrKwscBynvKxLYWFhhX8TQsBxHCKRSIXrMh6PBz6f
                T3lZl9LSUvA8X+Eax3EQBAGU0grX5d+ysrKUl3UJBAIIhUIVrmnFAwCORuU4GjkayTgaORrJOBo5GsVi
                ViNGeSEZRFEEpRQsyyp/SimUUgiCYCmDzMLzvG3xsCwLQojyp5TiaGQdRyPrOBpZw9HIOo5G1vm3aZRS
                RwhSwgCkPWGiKGomLJVEIhFb4rGz8MHRyBKORtZxNLKGo5F1HI2s82/SKOWOEIBol1q6E6bn5aUSOz1x
                ubswnTgaWcfRyDqORtZwNLKOo5F1/i0apcURgo1enlrC0oFdhU8QhCrliTsaWcfRyDqORtZxNLKGo5F1
                TqZGaXOEIGUgbEqYKIq2FAq7Cp+dnjgcjSzhaGQdRyNrOBpZx9HIOlVdo7Q6QohJGMOkNyp5/C/dGQip
                UNgRj13pcTSyjl3pcTSyjl3pcTSyjl3pcTSyjl3pORkaMRzHgaoskUsVcsLSHQ+lFJTStHutkNJkRzyy
                x5/uvHM0so6jkXUcjazhaGQdRyPrVFmNIpEILS0thcvlMhUpwzBwu93Ky5oEg0EwDBMdCzSK1+tVXtIk
                HA4DMWOORnG73aa8UEopwuGwqXyD1O3ncrmUlzVxNCrH0cjRSMbRyNFIxtHI0SgWsxoRSiktLCwEwzCg
                kndkBM7C5k2lpaUQBAEMw0Q9PiOY3bxJ3iCK4zjwig2ptDC7eRMvbRBlNh4rG2w5GpXjaORoJONo5Ggk
                42jkaBSLWY2i7qYoiiCEpL17jdo8kcysp2sF3qYxWkcj6zgaWcfRyBqORtZxNLKOo5F5KvS7me1+sgql
                FLxNs93D4bAt8Qg2LZl0NLKOo5F1HI2s4WhkHUcj6zgamSNuAJJSampcMhnsEIsQktYMjMUuT9zRyDqO
                RtZwNEoORyNrOBpZx9HIOAnfXhRF2zIwEonYEpddhU+waYmho5F1HI2s42hkDUcj6zgaWcfRyBgJHSFI
                GWiHl0ekk2ftiEsQBFvGaO2Mx458czSyjl355mhkHbvyzdHIOnblm6ORdezKt3RopPkkURRTGpkWdsQl
                e5N2eOJ2xWNHvsnYEZejUXLYEZejUXLYEZejUXLYEZejUXKkMi7dp4hpnq0dSyoTpoVd3ZJ2xeNoZB27
                4nE0so5d8TgaWceueByNrGNXPKeiRoaeYFcGQkpYupfjwcY0VbV44GhkGbvigaORZeyKB45GlrErHjga
                WcaueJAijQw5QohJWLIRGiUVXp4edonF27h/hKORNRyNrONolByORuZxNLKOo1E8pv6Sl5bjpTthVNqt
                MpmEGUVOU7qxa4zW0cg6jkbWcTSyhqORdRyNrONoVBESiURoMBhUXteEZVkIgmD6PI9wOAzRxAZMRNpz
                ITMzU/mTJpFIBIKJ7bghxeV2u00JJopi9BwZo8hCWTlzxQyORuU4GjkaxeJo5Ggk42jkaCRDCgoKqNlz
                OSCJGwgETL2k2bNTIHl6ZWVl4NN8dgoAlJWVIRKJKC+rwlk4OwVSITIrsKNROY5GjkYyjkaORjKORo5G
                MlY0staPJHlehBDLXVFGkT08s5lhBUqpbfGY8fSt4mhkHUcj6zgaWcPRyDqORtZxNErCEYK0gRIhxJYx
                TSFNW2sr4W0ao5XTk+5C4WhkHUcj6zgaWcfRyBqORtb5t2uUdKoFaewz3QmjlJpKWDLYFQ/P82AYJu3e
                uKORdRyNrGNXPI5G1rErHkcj69gVz79Zo6QdIcR4een2JimlEG0608QuT1yOx47C52hkDUcj6zgaWcPR
                yDqORtb5t2qUsrfgeR7Ehi4vURQh2rRzpWDTgXV2FnJHI2s4GlnH0cgajkbWcTSyzr9Ro5Q5QjgJXp5W
                wmQopRAphSBaC+EID4bl4q6nKoiUgkqFgrNxjDbd8ZjRKFkEmw4VdDSyjqORNRyNrONoZJ1/m0aWl8/z
                PI/S0lLlZUBaxid7YbFYWQoHAIWFhcpLgLQHAsMw4BXL5GKXK4oixa48P1bsOFHhnkRoLSFkGCbuN4Zh
                TO+/AMW+EixD0PHcHNTLKX+Oy+VKuGSyKmtkhtLS0rhnyXAcF/cbZ3FJaSAQQCgUUl4GHI10cTRyNJJx
                NHI0kqnMGqXFEYI0EUr2wmRSnShICSOERB0LKAoeL1B8v+U4nlq0I+avKg9ulmBitzPQ+ox/CjDHcRAE
                AZTS6LWqrJEZtCoHJKgg0lE5oBJqJL8HjVkKK/9XxohGoVAomi63251QI/kLzuVyxcUBRyNARSMjGNHI
                saN4HI0cjWIxq1HaHCEkSFg6EoUEXl4FR0ikWLrpOJ78ZrviryoHbpZgSvczKzhCSOCJV2WNzKBXOUBR
                QaSrcsBJ0kgURfh8PpSWlmLr1m3Ys2cvjhw9iqLCIgSCAfA8D7fbDY/bg2rVclCzZk3UqVMHp5/RADnZ
                OcjI8IFl2WhlEAvDMNi0aRNG33ZHtMtaeY98X7t2bfH6a68k1PDfrhEcO4riaORoJFOZNUqrIwRFwvQS
                RQFp3gzgYgjkOlgvUVB4eVXBEYKikFcWjdRIRiMzGKkcEGO46awcYJNG8pdYOBzGhg0b8d57s/Ddd98j
                LA2xKr/WZOSeG4ZhwLIs3G43Wrduhe7dr0SP7t1Ru3YtsIoVIqtXr8HVAwcl7A6XYVkWl3fuhM8++xgZ
                GRnKn/+VGsGxo4Q4GjkayVRmjZhEFWgqkb8sGZ3JUJQChQEB763Kw1M/HkZRkE9YuashiiIopWDTPAPd
                TnjplGAz+WAFoxoli50ayRVDukm3RpRSFBQU4r33Z2HgNYMx4OprseCLhSgpLUUoFALPq9sJlfbRiEQi
                CAaDKC4uxo8/LsfEiVNwWcfOWL785wrd0PLf2EVV0UjGsSPrOBpZx9HIGrEaMXYljGGYhPFQWt4LtLcw
                hElLD2LZrhLsyA9iwaZCiPG3ayInLN0ZaCeRSMS2wqemUSqxUyNe2iAs3aRLI57nsXPnLgy+bigef/wp
                rF27ztAXohEYhoXX60k49GUnp7pGShw7so6jkXUcjawha0T8fj+VxUp3pJC6vQRpkhKlQFgQsfJgAF9t
                K8NxPw/5FXwcg+ua5eDyszLAmKyr5bkNoiiCFyl+2HoCz3+3V3lbpcDDMXiiT0O0OTNb+VMFrGokC633
                d4w0hAKFRukiVqN0YjXfrJCquCil4Hke8+d/jOeefxHHjx9PaT4RQpCbm4sFCz5Ds6ZNK1Sgf/zxJ/r1
                v1p3aKxTx8swb96chENjZklVvhnBzrgcO7KGnXE5GlnDzrhs0YhSSgsLC01HZmU8srS0NJpxEZ5HWAC+
                3RXAkt1B8IruHyLNnxlzcRY6NDoNZnyhQCCASCQCQghCER7LdxThpWUHlbdVCjwcg+euboL252iPuVrR
                iGVZ7N9/AAsXfqlphIQQNG58PgYOvBplZWVRjczEZXbMOFYjM/GYHTPmeR5+v990PFbG9a1opLQjSinC
                4TBmznwXkyY/ikgkkvLKhmEY1KlTBz/+sBRnnnlGhV6hlSt/R/cevXUdocsu7YDZs99LmEdVXSMjxNZ1
                ZuL6t9kRlT7Sol/mhKCoqAgul0uzzlLiaJQ+jRJR1ewo+iko2LRrpSAIoBQ4FgBmri3B4gROEFA+cTos
                UizYFkBx0HgGyNg5RmsXZjWilGLjxo149rkX8NTTz6qGZ559Hv/338+jFY9c4MzEZQW7NBJFEYLBM2eS
                xaxGSgRBwOefL8DjTzyVFidIxu12oVq1ahWcoJPJqaSRURw70ofneaxY8QueffZ53Hf/g3jkkcfx1dff
                oLS0zJahHkcj61QlO6pQ0uzIwIhIsfNECK/+XogNeREICZwgGUqBAyUCXvjpCII8jQ6bGUUufHYYlF3Y
                oRGiDmv6807WyI40iRo7i6YSqxqJoojt23fg3vseRFmZ37ATxDAMfD4vcnJyUKNGDdSsWRPVq1dHTk4O
                fD5v3LsQQlCtWjVkZWVWuF4ZqOwamcWxI3WOHjuGG24Yhf5XDcQLL76E996bhTfefAvjxt2NHj37YN3f
                fyv/JC04GlmnqthR3FN5aWvtVCNSirBA8cOeIF5fVYyCoGjIsRFFij0FIXyxqQAiDPyBArnwVSXSpZES
                URRBbJq9Lxo4GC9Z7PxasqJRfn4+7rnnPhQVFWmWWVmTatWqoU+f3njyycfx7rsz8PFH8/D5fz/Fgs8/
                w3//7xN8NP8DvPfeDEx98XlMuHs8+vTuhXr16sHjceOCxo0rTW9QLJVdIys4dlQRSimKi0swevQYfPX1
                1wiHw+B5HoIggOd5RCIR7Ny5E3eMGYe1a9elPd/gaJQUVcGOEj6RT+GhaxSASIGioID31xbji21+lEXK
                z9cyAgXAU+CrrUX461AAgkYDoYZWo3KqkkqNtJC7JdNR+GKRK4h0GxSVlpSnOx6Y1EgURfy4bDn++PNP
                iBpzIwgh8Ho9aH3xxfjss4/w9luv46Ybr0e3rl3QuvXFaNz4fJx3XiM0aXIBLr64Fa74z38wePC1uO++
                ezB//gdYt3Y15syZhasG9K+UjhAqsUbJ4NjRP4iiiOnT38GyZctVh38ppdi5axceeeRxFBYWORpZIBmN
                zHKq25Hq01KRgZRSiNJQ2EsrjmLV4SCE+DKvC6UUYV7EzD+PYdvxoPLnfy2p0MgIcsOc6sKnxC7DpdKq
                rHTHA4MaUUoRCoXw6quvIxDQLt8ulwvjx92JTz75EM2aNoXb7QaJWZGSSCP5K8rtdiM7Owt9+/TGwKsH
                JLzXKOl2oiqbRqlAS6NUUtnt6MSJArz+xlvgdbaCoJRix86d2LJliy3pgaNRUtiRHqRJI80nJZuBERH4
                82AZnl12GNvzQ6b3BVJSFBQw/+8TKIuofzH/20hWI6OINs23squCgJQml40nOashiiK++vobbNy4KeHX
                sYzb7cbYsWNw113j4PV645wRuzSCpJMdX4CVRaNUYZdGldWOKKXYvn07SkpKlD8lpLS0FAcOHAAcjZLC
                jEbJcKpqpPsUK11eVBoK+/jvE3jnjzyURRIfAWAWkQI780OYtvIY/BFjc4z+DVjRyApUWuqqbIBTjVxB
                pDtNoijauitrovRQqTfog7nzot2+iSCEoG3bNrjv3gngOE5VA7s0gpR/idKUSiqDRqnGLo0qqx0Fg+W9
                nkbaBEop/P5A9N+ORtYwq1EynIoa6TpCkLq8jCSMonyX6Dw/jxl/HseirUUoC5cvl08Vgkjx12E/lu4o
                tjR5uqpiVKNkkQtfqjxxNai0t4gdhisIgi1fS4k0opTi0KHD2LptG0SVuUHy0NbgQdcaWvLuaGSdRBql
                g3+zRqeddhqYBIf+JoJlGdSuXbvCNUcj6xjVKFlONY0M/7VeFx6l5T02G44F8ezyw1h1oMzSxGY9KABe
                BL7cXIjVB/0pdbJOdfQ0SjVGKrJkoDZ9LVFKbftaUmpEKcX+/ftx7NgxUJXCTAiB1+tFv359TBu8o5F5
                lBqlm3+TRoQQNGx4Li68sImhdNeuXRvnnHO28rKjkUWMaJQqTiWNTNWqal1elFIEeRHfbS/C1J+P4GBR
                OK19NZRSlITKD2jdXaB/au6/CTWNUo0oLWVMpvAZwc6vJV46VDDdxGokiiL+WrsW4bD6Ts6EELRv3xa1
                atUyld+ORtZx7Mg6ehp5PB68NPUF5OTkaKbb5XKhT5/eCR0hOBolhZ5GqeJU0ciUI4QEXl750ngR763K
                w7x1+Qjz9g1YFYcEfLA2DwE+8ZDCvxWlRulCbSgn1VAbVz6Ew2Fb4pE1EkURf/+9XrU3CJIjdEn79paM
                3NHIOo4dWUdLI0IIWre+GBMnPgifzxvXy0kIgdvtxpAhg3H3XeNVnwNHo6TQ0iiVnAoakYKCAmr2XA4A
                CIZCKPMHcKCYx4cby7C3iLfNAYqFY4DWdT0Y2SwTLoaAkIpnp/AixdJNx/HkN9uVf1opcLMEU7qfidZn
                aJ/BYkWjQCCATz/9DOPGT9A9O6pnz+54Z/rbqFatmulCy/M8SktLlZc1sXK+DaUURUVFysuacBbOt6GU
                IhAIIBwOK3/SxIpGRUVFuLJ7L2zYsFHVGeI4Dq+8/CKuvnoAWJY1fQYRTGi0atVqDLxmsG55ubxzJ3z2
                2cdxh65WRY1CoRACgX8m7BohnRrFcirbEc/z+PXX3/Da629i7969CIXKG+batWth+LBhGDXqJmRk+OIc
                pUQ4GqVHIzWqmh3pl7AEUAAgLP44EsE7a0ux5yQ5QQAgiMBfR0P47WAYxrdp/HfAcZyhSiRZOGkVk5Ue
                CzMQQuByudKeJiJNTrajS5dlWRw5clR5OQ6zlYESRyPrcByXdP4b4d+mEcdx6Ny5Ez6YOwsff/QhPvhg
                NuZ/OBfffvs17rrrTmRlZRp+R0cja+hplEoqs0amc5lSoDQk4MstRfhwfQny/epLfu2ASvsVfb61DDsL
                UrtC7VRHHnO2AyotYzRT+KxAU7RKQA9q0+RFURThLytTXk4LjkbWoNJwRbrjwb9Uo4yMDDRseC4uatEc
                F1zQGNUt9DY4GlnHiEapoDJrZCqHBQocL4vgzZXHsGBzESJC5eiDoRQIChQLtpUhkuyujTZjVKhTAXnC
                mh2GKxf0dGPX+LZdOBpZR44n3Wn6N2okN1pmGq9EOBpZR0+jVFEZNdK/A1Kvi0Cx+XgAzyw/grWH/BDE
                yuEEycjO0CnmB4HatEOvXYjSjp/pLuR2fS1BGnO2o4KwC0cj6/A8D8bgHjjJ4GhkHUcj6/xbNdLNWUoB
                QaBYvL0Ir/1yFIeK07s0/t+IHd2SdkKl8Uk7DFe0YXdj2LgM1C4cjawjCAIYhkl73jkaWcfRyDr/Ro3U
                f5GcoIIAj3dX52He2nwUh07ufKCqjF3dknYhf8XoeeKpQDaodONoZJ2qppEgCCBJDuMYwdHIOo5G1vm3
                aaSaowIFdp4I4oWfj2D57hJQEGcicpqxq1vSLox44qlCkM7pEgQBPM+D53kIggBBSM05dzKORtYRRdGW
                eOzSSJB6ctOdJkcj6zgaWSddGomiGK2beZ5HKPTPpsiprKuVaGmkuo9QICLi9d+OYs1B/ykzFHZ6DosH
                2ldDtUzvKb2PEMuy0YZdJpFGeoTDYXz00cdp30cIAAoLCyv8W/bAqTS2Lf+/jMfjQUZGRsJCqQalFMXF
                xQiFQigrK0NeXj4KCgpQXFyCvLw85Ofno6zMj0AwAFE6bTk7Kwv16tdD/fr1UbNGDdSuXRt169aBz1e+
                P4naF0IgEKhgoEpSoZGcnoYNG8MfCKhWAhzH4Y3XX0G/fn3BWtxHCAk0ikXW6M8/VyW1jxCkE8N5nlde
                jsJxXIXfOQv7n0ChkSiK0fkA4XAYfr8f4XAEoVAIVPoSdLtdqFO3LrIyM8FJW0tolQEZXmdfEo7j4hzu
                RBqFQiEcPHgo+p6JKC4uBqTJwzVq1kC1mN2X1ezI7B41MKARwzA4cOAAAoHyA1I5jkuoNSEEPp8X9erV
                S2jLanYkp0PPjoz2FqRKIyMUFBRENRQEAYFAQEpnOJouubz5fD7k5uYiOzsbRJq4azRNehqlyo78fj+C
                waBqmWRZNpomGb26jkorloPBIPLz85GXfwL5eXk4dPgw8o7noaioCP5AAJFIBAzDwOP2oHqN6qhzWm3U
                qFEDNWrUQJ06p6F+/frwess33TSSZzJG6rrY9Ko6QiIFth4P4OnlhxHmE2dQZaOqOEJI0NAm0kiPk+kI
                iaKIdevWYePGzUCMFy5Ky/ndbjeaN2+GSy7R3jFZLrCiKKKszI+vv/4aX3+zCJs3b0FRURFKSkrh9/vj
                KlMlsgNRvXou6tapi779+mD4sKGoXbtWQiNTq8BjMauRnBY5RCIR/Prrb7jmmsEIaWxoxnEcXpr6PHr1
                6gmWZZEpNeRGYRgGXq9Xd4M2lmXxxx9/4uqBg3TLSzKOEBSVuJUKnFIarcB5nseWLVvxy6+/Yu3addi/
                /wAC/gDCkXC08SOEwMW54MvIQE5ONi5o3BgdOlyCLl3+g9q1a0fLQKLGXK+RhZQG2RmDSiMbCARw/Q03
                Y+PGjdH7lMjXCSG46KIWeOP1V+F2u6PlU26U5PvS4QhRSrF7927ccsttKI3Z2iFR3rAsixHDh+H++++N
                Sy9U7IgqztdjGKZCfsSWhQYNGuCMM86Is08lqdIoEUq73bJlC1au/AOrVq/G9u07UFRUhFAoBF7qhYaU
                VxzHwe32ICcnG+ed1whtWrdGx46X4fzzzzPkFGlpJJOsHQHA0aPHsGDBF6pxMQyD/lf1Q2ZGRvRdE9V1
                sXX1li1bsXDhl1j+0084cuQoCguLUFJSEv0w0cLr9SA7OwfVq+eiTevWGDZsCC69tAPcbnfCujoRyvZI
                idKOVB0hSE7EL3tL8e6q4widAs5QVXKEoCjkahppcTIdoXA4jBenvoy3355e4boMy7K49tqBmDljOliV
                iXnljV0Af/zxBxZ8sRBffvk/HD+eF/0t9r9GkY2IEIKMjAwMHnwtrr9+JFq1vAhutzt6X6IKPBFGNaKU
                Ii8/H7t378HWLVuxbNnyaCWh1UMgY7QCSESNGjWwY/tmlJWV6T5jzZq/MODqa3XLS7KOEGLyzmwFLooi
                jh07hpW//4Fvv12MH39chkOHDkcrNb28REw5YBgGrVq1RL9+fXF5505o0aI5PB5PhXwy0shC4RgnamRF
                UcSvv63EsGEjkZ+fr/ueLpcLTz35OIYNG1LBRmIr8VQ7QpRSlJaW4fYxY/HTTz9rfmAQQtD4/POw8MsF
                OL1Bg4RlK5EdCYKAp55+FrNmzdEsZwzDYMKE8XhkyuS4vFSSKo2UUEpxPC8PG9ZvwLJlP+HbxYuxefOW
                Co6bno5Q1DtnnnkGunbtgm5du+Kii1rgjDNOT1gHqmmkxKodyaxfvwFXXNENgWB5758SjuPw8UfzcNll
                l0bTrazrBEHA7t178MMPP2L+Rx/hr7/WRd/dSl0dm18Mw6BFi+YYfest6NWrB2rXrp2wrMWibI8SEWtH
                8S5+DCwBLjkjC53PyQajE3FlgBCSsECdqvA2zd5HTIFLJTzPR7/AlEEQBBw+dDiuuxqSwYRCIfzww4/o
                1bsvhg4bifffn41jx45H/54qujaNIv+dKIooKyvD3LnzMGjQENx734MoKiquUMEZQU0jQRAQDodx7Phx
                fPLJpxgx8gZ069YD11wzGHeOuwuffPoZDqmkPxFynlkJcn4ZwWz6k0EwOSFTFEXk55/AM888j169+mH0
                6Nsxb9587N9/oEJZkzXWCvK9PM9j9eo1eOKJpzDwmsG4snsvfPX1N4a+XJXI6VGzI0II2rVtg1tG3QSO
                4+LeSRl4nseMGe+isLCwgi6CNME0UblLFlEUsWTpUvz220oIUtlUCzVq1MD0d95Gg/r1dRsmJTRGA61A
                TWqgh55GMqIooqCgEI8//iSuvLInhg4biVdefQ0bN26K2lTsO+oF+V5BELBnz17MmjUHN4+6Bb1698W4
                cXdh9+49iEQiltJr1o6UiKIICnU9BEHA/v0HEIlE4socpRRlZWWYNPkR9OnbHw8+NBGrVq1BJBKJyx8z
                xOYbz/NYu3YdJtxzH3r36Y8lS5ciHC4fhkyGWDtitDKQEAI3R3Bd8xpoUttb6Z0hOWOUYp3KJFvIjUJT
                vE+FXiGllOLo0WMQFV9WgiBg585dmDzlUQwdNhKrVq1GUVFRtFJOJVRqbI4fP445c+ai/1VX489VqyBo
                fAUnIlYjURSxadNmvPb6mxh83TC0atUWt44egy+++BLbtm1HXl4ewuF/hmz+zch669mrIAg4duwYZs+e
                iyu6XIkXXpyKrdu2oaSkNCX5KFe2+fn5WL16Da6//iYMH3EDli//yXTjxEv7oySCSMcm3HffPejWrauu
                XYuiiN179uCxx5+E3++v8B5yGdXLOzOIoog9e/bi2Wef13UEWZbFTTdej+bNmqmmt7KipZEgCNi7dy9e
                eeU1tGnbHi+/8hq2b9+B4uLiqLOtlS9GkMu93x/Anj17MfeDD9H+ksswadIjWPf336YbeaN2ZBVRFLF/
                //6oUyQ78eFwGAsWfIEOHTph2rR3sH//AQSDwZTYpBJRFBEIBLBp02bceOMteOvt6SgsLKrQflhBtiMG
                0iQ+IWa1TWwQeB4+luKmi6ujbhaLyuwKEWm8led5RCKRf9JgsmGzE9kj5aRzWBIF6GikFkQTqwvkL7rY
                fDMTlO/MGfjqOnL0aHRsPRIpn9i6adNmDBo8FG+/PR0lJSUpNyg1IpEIVq1ajRtuuBnr1v0dNXijAZJG
                4XAYc+Z8gEceeQyLFy/BiRMnol9HJxM1jZTBaGUqO5GJAiPNjzAS5KEKtXIXCoWwbdt2DB02EhPuuQ87
                duww7ZyYgVKKYDCIb75ZFI2zoLDQVJqgYUeCIMDtdmPypIdRv3493Z4UURSxcOH/8O23i0EIqRBPorrO
                aEiUnnA4gqefeRaHDx/RLK/ycOKd48aCk4Zl1AKkoRVl0KsbZGQnVS+IohgXh1aAQqNIJIJgMIhPP/s/
                9OzVF48/8RQOHTqc1rImIwgCSkpK8Nbb0zBgwLV45dXXo8N8yvdWC3p2pBX0oJTi0KHD0TJDKUVeXj7G
                j5+AMXeMw46dO007b1ahlKKwsBCPPfYEHnp4EgoLixKmWZk/WoEQAiYrKys66720tDRhKCstRRZC6NPQ
                C7exevKkwDAMMjMzQQhBKBSC3+9HaWlp3Bh1ZcPn8yErK0sz6GmUKITDYXi9XmV0CeGk8WVBEBAMBqN5
                ZzQo3zcrK0uzUaXSZNcdO3aipKQERUVFWPDFQnTt1gNbt27VrIjTRfmXzwFcNWAg1qxZg4yMjLg0aYVA
                IAC/v3zVmh2VglEopaoaKYPR+SaCIKCsrCyuHJSWlsLtdsc9Vyt4vd6E5fvEiROYM/cDdO/RG7/9ttK2
                yhZSnhUVFWHWrDkYdfOt2H/gADIzM+PeXS3o2dGZZ56BCXffBa+34nwkJVSaVD/z3ffh9/vj4lHWdUaD
                UqPMzEws/+knrFjxq6btEUJQp85pmPri82AZRrUMyAHSXBxlcLlcykcnJBwOxz0zUQiHw3Fx6AVZo7Ky
                MuzYsQP33vcAxo4dj7179yGiMXcpXYjS3Lcnn3waI0bcgO3bd5iqg9TsSC+I0lEUWhQWFcHt9iArKws8
                L+Cee+7D/I8+tvVjNZZwOIyPP/4Ezz77PPLz81FSUlIhTcq80QtRt5xXmesgQwC0quPBtRdkgdHOs0oB
                z/Plnp7BL49TAT2NUgWfou3P9XriKKXYsHEjKKXYvHkLHnxwIkpLS0+KYcmIoogTJwowafKjKC0tM/0u
                crlzMIcoDTmw0gTGSCSC6e/MxKRJj+DEiROmdUgFVJqj8OOy5bj66mvx228rNZ0EJVp2xDAMrr76Klx/
                /UhDNr1p02Y8/PBkhBOsLkxFXXfw4CFMmjQFZToHAHMch9G33oJzzz0nqfgqC+FwGEVFRbjt9rH44IMP
                NZeR2wGVhrm+/+FHDB9+Pf7+e70ppyzWjowiitr1NADk5+cjGCx3sG644Sb876uvwfP8Sc2r8g+E9zD3
                g3lJ99xVKMnycEAiCCmfPN2mrgut67or9RCZjGDTrpV2oqVRKpEr8XRWdpRS/LVmLbZu3YaR19+ouZKG
                SEOIbrcbdevWRevWF6NHj+4YNOgajBg+DCNHDMfQoddhwICr0LXLFWjVqiXq1q0Lt9sNlmVNlQFRFLF2
                7To88sijpnsTGYYBy7DweDyGgtw1qwWRhkTcbnfc3xsJnImhiJOJ7GREIhG89dY0TJ36MsrKykw5H3I5
                cblccLvd8Hr/yQeXy2W6LECyuUOHDuOOseOxZs1fug5+LGp2RKT5QqNuvgkXXNBYt+HieR4Lv/wfFiz4
                ImH8cl2njEcPSinKyvyYNHlKdDGCGizLolu3rrjxxuvhUaysSxdm02MGSinWrVuP3n2uwpo1f1lqTOXh
                IqVtut3uaHmzkgZBELBn71706t0PixYtTugAqyFrqFemzJCfnw+/34/XX38TK375RbN3VrZBr9eLRg0b
                omPHy9C7dy8MGnQNRo4YjuHDhmLQoGvQu3cvXHppB5zXqBGypV5CM3lFpXlK7703C3v37ktoF0YhlFIa
                u9RMNia1h4qUojRM8cqfJThUmvpJUclwVnU3nujaAOBD0QaMFyl+3lWCF3/Yr7y9UuDhGDx3dRO0P0d9
                6TUUywH1NJJhGAaLFy/BqFtu0/yqYFkW/fr1wbwP5iAQCFQYN+YSbESWCOVyylAohImTpqgun4cUb5s2
                rVG/fj18+eVXCdMjp5XjOFx88cUYM2Y0LmnfDplZWfDGNG6QKgBBEBCJ8AiHy4cLNm/egnnz5uPrbxYh
                FApBlFYyGCEzMwPzPpiLHj2uNFTpy6t7CgsLUVJSqquRKIr47rvv8fgTT2m+E8uyeO65p9GzRw8wDAO/
                329KI47jUK9eXdSoUUM3HStX/o7uPXrrlpfLLu2A2bPfSziUlmVgWXIsfMzSZ0EQsOCLL/HQQw+jrMyv
                vDUhchlhGAb16tZFz57d0eHSS3H+eY1QrVo1AEBJSQm2bd+OZcuW44cffsThw0cgmFxRxzAM6tWriy8W
                /BcXXthEs9IuVSx9VtNIFEWs+3s9Bg8eirIy7R5IhmHQtOmF+OH7pcjIKN8QVLk8nVXsj6KGrJEgCPju
                u+8xfMQNcROyYyGEoGHDczF3ziycffZZUQc+No2J8CRY3i8IAiZOmoJp097RLGcMw2Ds2Nvx8EMP6pZb
                eWjfKJRSHDx4EH37DcCOHTs17TQWuawRQuDz+dCx46Xo1KkTmjdvhgb168PtdoNSihMFJ7Bt2w78/vvv
                WLZsOfbtK59sLJc3tXxOxGmnnYaFX/wXzZs303RuYu0IUlkwotHOnTvRo2cfTXurVq0a3nzjVdwxdrzq
                x4mcN5mZmbjxhpG45pqBqF49F16vD263C16vF9nZ2YBUBnielzY9DeLEiQJ8++0SzJn7AXbt2mXKNgkh
                6N+/L1595aWog65sj/SIc4RgoKGllGJ/KTB9TTHy/NqZbCdqjtDyHUV4adlB5e2VAiuOEAxohBQ5QvLv
                eoVSWfBCoRAeengSpk+fUeF6LIQQaQ4Tje5gq/zd7Xajb9/euH7kCLRq1RK5ubmGelEglVO5cjh27Bj+
                +/kX+PzzBXH7gKjBsiwGDOiP2bPei1YqWsRqRKVN/LQ0EkURX3zxJe66+x7VeyBV8u+9+w4GDrwaLMvG
                NbIwoJHRyuFkOkKUUixbthy3jh6j2SjHQgjBueeeg969e2HAgKvQ+uJWFfaDUlJYWIhwOIyNGzfhm0Xf
                4ttvF2P37j2GygOk+Hr06I7Zs95DtWo5yp+jmNFIFEVMmz4DL730ckI7iIVlWdx00w14/rlnkJGREecI
                yffoOUNZ0hy+vXv3oW+/Adi9e7fm/W63G88/9wyuvXZgVFvZIdAqu8k6QnfccRseevABuN1uzXjMOEKU
                Uhw6dAiDBg/F+vUb4nRSgxCC+vXroWuXLujbtw8uv7wzsrLK56RqUVJSgr//Xo/vvv8B3333PdavX49w
                WD3dSgghqFWrFv7730/R+uJWqg640hGCQY22bduG3n36azpCRJobdvRo+SaYShiGQePGjTF06GBcN3hw
                hXyR/6ulkfxMnuexYsUvmPvBPHz99SKUlJQob00Ix3H4cN4cdOx4GRiGMVTXxZIwR2WPVc37JITgzGoc
                BjWvcUrMF6qK6GmUSgRpaaaewSsRNYwPUhrKJ/fFV/4sy6Ju3br4cN4cvPjCc2jTpjVcLheIiaFO+V5C
                CE477TSMvnUUPpr/Aa67bnD0WVqIoojvvvsBeXnqQ3ZqxD5bdtyUQXmfHsq/jw2itGpGrviUobIjiiJK
                Skox9aVXDM3TYBgGGRk+3H33OPz4w1I89eTjuKR9u+gXoVbweDxo2fIiPHD/vfhy4ee4c+wd8Pm8hvKJ
                Uorvv/8BTzz5lGYjngg1O2IYBiOGD0OLFs1VGzkZURQxd+48fLt4iWoDLhgcJgsEAnjiiaewZ88ezfxm
                GAY33ng9BgzoX6G+kR0nM06vFVJd1/E8j6kvvYINGzZqOggyRPogGzFiOBZ8/hlee+1l9O7dE9nZWar2
                FhtcLheaNr0Qd44dg/kffoC333oTdevWSVgWEkEpRX5+Ph579AmEw2FNh1WJEY2M5AGlFEeOHE1YTliW
                xXXXDcZ//+9jjLr5prh8MUJsXl1+eWe8/dYb+PST+dHNJvWeIwgCPvu/z+M+Coyiaimi1I2nloEsIeh4
                Vhb6XZALzvGGTgp6GqUSXmWuQzpgWRYXXtgEM2dOQ4cOl0TPBUsGIs2zqVmzJp595kk8cP+9yIjZMj4R
                VFrZ9tprbySsAIxQVTUiKd7QTxAEvD1tOtav36BbMbMsi8aNG+Ptt9/EI1Mmo1atWnBL2+8bhWEYuN1u
                1KhRA/feezdmvDMtOvSgVSYg5fP8+R/jl19+NV0u1DTKzs7CS1NfRMOG58b9FguVJpK//vqbKClRX1gg
                O0NqGomiiGXLf8LiJUshJBiyk2GkXX3vmXAX3DFHfcgI0hBGust3quxIFEUsWrQY8+bNB29gsi/Lsmja
                9ELMnDEdTz35GBo0aACv12uonMQi1z85Odno2bM7vvrfFxg69LroEKceoihi+U8/4cUXX9Kcn5MIIxqZ
                eZ4MIQQ5OTm4794JePyxR1CtWjWw0vy8ZGAYBj6fD506dcSsWe+iZcuLdPObUoq//lobN3JiFE0FqNS9
                migDCQE4hqB/k1ycV9MDjXd0SCNaGqUauXLVKpDJwjAMGjVqhM8++xhtWrc2VEmYgWEYeDwe3HrrKFw/
                crju80VRxOzZs+H3q3cb61HVNEJMxamXf0YQRRHr16/H9OnvqPZyyDAMg7PPPgvvTH8L/fr2gddrrCdH
                C7fbjS5drsDMGdNRv37iw0NjoZSipKQE09+ZoelEqJFIIzldjz46Rbd3ilKK1avXYMqURzXzS3YoE6Un
                P/8EJky4V7PhkBvvxx6dgrp16yZ8DmKcFDWnK1Wkwo4OHDiACffcpzsfC1K+XX55Z3z6yXx069bFtLOt
                BsuyqF+/Pp5+6glMmvQwPB6PoeeKoohXXn0dq1athmiiVwhp0ohlWdwx5jaMGXMbsrIywUiHmSarkQzL
                smjRvDlefulFNGhQXzeP9u3bh+3bd+rqmgjtJ0sZKKisVCIEyHQzGN3uNNTLcp0SK8mqIloapRpBEMCo
                LAlWYrY8MgyDjIwMPPP0E8jOKu9eTaXhxuLxeHDvvRPQqeNlyp8qIIoi/IEgNmzcZLryiaWyapQMer0O
                RolEIvjkk88QDmuv2iGEoEmTC/DuzHfQqFHDlKaPYRicccbp+N+XCwwNUQmCgMWLl+Knn362VC4SacSy
                LHr17IFrrrlGN095nse8D+dj6dLvNPMskUahUAhPPvmU7saJbrcb995zN7p166qbH6KFZdtWSMaOKKWY
                /9EnmqtTZRiGQefOnfDS1OdRvXp13fSbhUjDbTfecD0ef+wRZCY4s08JlaYSzJo91/SwLDQ00ioDarAs
                i8GDr8Xo0bfE9RQmo5ESQgjOO68Rxt05VrenSRAEfLNokaWPE0Pqyl6eMgMBgICgXrYLt7atjSxP/O8O
                9qClUaqRK3E95C9So3Ach4cffgDt2rUFEzPJOF1p8ng8uPnmm3Q3tRMEAVu3bDVtXEoqo0bJkqxGVDqr
                aIlOg06kyd7PPfs0zjuvkaZeViGEoHbt2nj8sUfg8cQPAymJRCKYPKV8iwWtd1cjkUY+nw+vvjIVrVq1
                1M3TSCSCV197Q3feSKxGgiDg77834L+fq582DikvLr64FcaMuS3OYVNDraFNNVbsiEpLrefM+UDXiWAY
                Bi1bXoSZM6ajdu3apuIxCyEEQ4YMxujRtxiatwgACxZ8gf0HDmpqrkYijbTKgRoXXdQCkyY+pNoja0Uj
                NQghGDToGrRp01rzeZTS6EHBZu3RcE2p5uURAjAEOK+WF/2bOPOFTiZqGqUDwcDZNmYKI8uyaN++LUYM
                H1bhuck2tFqwLIuWLVtonmZMpYmae/fuNZUeNSqbRqkgGY1EUcScOR8gLy9f+VMFOI7DzTfdgJYtL9L9
                MkwGRjo+YvLkifB41FefQXr3nTt3Ye3adZbLhlIjIq2klOdcqJVLSPGvXbsOz78wVXcPHLlxyMvLwwMP
                PqQ5NEQIQc2aNfHkE48Z2nIhlkQNbTowa0eUUrz19nQcPnxY04EghCAzMxMPP/QAfL7yuUBKjVINx3EY
                N24sevfuaSieUCiEiRMn62quRrIasSyLG2+4HtnZ2Zplw6xGWrhcLlw3eBA4Tv2dKaU4ePAQCouKlD/p
                YtgRkhFVxv9cDNDzvBxc0VA7cxzSj5pGqSZVhRxSZTBEZTWXXIkrv56ThUi9DG3bto2LMxYqHRBrpdJR
                41TUSAurGgUCAbzx5ltRZyoRjLR/zrhxY6OVdzrTxHEchg8bivbt2+uWi5KSEqxY8Yvm++uh1IgQgk6d
                OuLuu+4Ep7NVhCAIeP/92fj11980G3hIef3Kq69j27btqvcSaV7QU089jnbt2lpqLOWGNp0ayRixI0op
                iotLMG3adN3eD4ZhcOstN6N9+3ZxH2R68ViFSKul7rzzDmRnZ+vakCiKWLZsObZu3Wa5TkpGo6ZNL0Tf
                vr0N/60RjfQghKDxBeejenVtx5xSigP7D5rOF/a+++57LCMjA26321BwuVzgpIPXQtIhk+FwGJFIBEIk
                jHqZDHaciKAomNjQ0kmOh6B9XQ5urnzWudvtBudyY19BGD/vLFDeXingGILLzs5CLR+J5mWiYEUjURSx
                fv0GfPPNt6oVHyTjb9jwXPTs2QNerze6M6qRIG9oGAwGK7xvIBDA4sVLsH79BmV0cRBC0KBBfTzzzFPI
                zc2NiyM2TbFlzkgQRTFaFhIFl8uFghMFWPrd96p5RAjB6Wecju5XdoMgCHFxyMGsRizLRvez0TJchmHQ
                o/uVOPfcc8DzPNzSLrbKZ6oFNY0Shb179+Hjjz9VzQtI73PO2Wdj2LAhyMzMrBCPWY1+/HEZPvnkM80G
                KiPDh0emTEbbtm0q7BAtiqKpuMImNPJ4PHC7XPjq62+UrxNHcXExBgzoDyoNv4TD4X+ekeDZiYJSI57n
                0bx5M+zYuRPbtm3XLB+CIOD48TwMGnQNsrOz454tP3/16jV48cXy3brVYBgGV1zxH4wbNxYcyyISiSBs
                wI6UQUujUCiEH35chjVr/tIsZ4QQXHbZpbiyWzd4vd64OOR4ErVHyvhWrPgFH338ie7+Pc2bN8Obb76e
                sB5SamQ0MNIqKOXzYoPH40H9+vWRn38Ca/7S372cUoqzzj4TTS+8EDzPI5yERvv27cOnn/4fIhF1G5Rx
                u1147dWXceGFTQzHZUQjteCOsSNQYOHCL5Gfr957zDAMrrqqP+rWrRPNFyOB4U2e1CoHl9Q9zcec+CoI
                ArJdIkZdlAUvR2yfPE2lDfQgfdXJwcpXjV1Q6WyZ2HxMFJT5byTIGhlBzjsmwanUWoFly4+TgKIsyMEI
                LMvijjtuR61ateKeHxtc0hbsRvJLDvLXiFpwuVyoV6+u8pXiCAaDcc9WBuWzjQSjZVOMOYU71RrFBr0K
                WEbuOVAGMxpFIhH8/vsfunHWrVsXXbteEa1Q5XhYaeNA5XO1gvJ91YLb7Ub//v0MDQ1t2LAR+/fvRyTm
                FOxUaMQwDCbcfRdyc3N1ewl+/e03vPzKa9GvfGXw+/24c9xdmo0IIQTVqlXDc88+hQyfr4KGenaUKGhp
                pOUAxWI0HxO1R3IIh8P4889VCIW0l50zDIPhw4ciJyc77vmcikZGAhTtkVpwuVx47LEpOO009aF6GUEQ
                8OuvKxEKhaLlzqpGomhsp2tCCBo1aoQLm14Ij3R0j5mgpZFaiNU/MzMDbp3hagAQhPI8Vz5LK2hblw6J
                urwYQlDTx2B4syz4OG0xHdKPkQKeCnipkTGLXPkOGzpEt7KHVOYYg5M3jWLkWWKCHYFPNaxqZBYjGskf
                AJu3bNVsFFmWRb9+fVG7dm3lT1EHyqgzaQYiHaHw0EMP6D5fEAQs+naJZjqMEqsRI/XUPvfc08jM1N7B
                WBAEzJgxEz//vKLCe8i9VM89/yIO6EywzcrKwtNPPY66detqxmWGdGqkJFF7JF9fufJ3zbQTQuDxuNGt
                a1fdd02XHZW/gwcDBlyl+3xKKVavXg3BwsRgJVr5EgshBC0vugiZOvuvaaGmUaoxq5F+y6OBKE2Gii04
                RHpoqzoutG/gAWsxw/4tWC1QRknWSMzA87xuJZKIFs2b6U68i0VZ5hyMY1UjsxjRiOd57Nq1S7Mi5jgO
                N990o+qz5IbWiBNtFkIIRo4Yrls2RVHETz/9pJkOM8RqxDAMevfqiWHDhmhW7JRSlJaWYerUlxGOWUVG
                KcWOHTsxd275Cd1qsCyL//ynM3r06AFWZ/M6s6RTo1gStUeQ8vMvnQnthBB06thRd0NLmXTZESPtXeSV
                ep7UoJTi2LHjho8LSgUMw6Bt2zZJlQ81jdKBGY30FdeBSqtqYo2UEMDFEFx1XgZanSIn1Z9MjIp1KiDE
                TCoUqb6BEkLQtFlT03kge/xWDdIsdsVjB7EapRMtjSilCIXCOHBAfWIjIQTNmzfDGWecnvAZMunqdSj/
                QnejRYvmmvFTSnHgwEHNzQnNImtEpD2Abhl1k+62AaIoYsUvv2DqS6+Al3ZNzsvPx62jb0dRUZFqPgNA
                48bn45Epk+DzeZU/pYR0aaRE2R5RSrFq1WoEAgHlrRUghOCOO2439X7psqNWLS9CRmam8nIclFL88MOP
                STtCWuUiFkZaUWnEUdRCqVE6MapRcimSUPPyvBxw1Xk+1MpgHWdIBblQJFu4KhOyJy5XfloQQnDuOedo
                VvBqyPEYNeRkqWoaGakgkkVNI0optm3brns2UIcOlxjKd1EaujRyr1GItJqnSZMLdJ9bVubH8bw85eWk
                iNWofv36mDljGnJzczVthecFvP7aG/jzz1UIBoN48423sG7d36qNJSEEWVlZeOrJx1GnTh3NZydLOjRK
                RGx7JIoi/vjjT9X0Q8qD3NxcdOrU0XT602FHderUQbNmTXXziVKK31aujLMts2j1FMaSmZmJs88+S3nZ
                Emo+QzowopF2TpuAJthamyEEtXwMRjbLRJaHcZwhFWQj1Sv4pxKCtKOtFkQ6GLLB6Q1071XDSCFPBXJl
                U5U0MtN1nAyJNKKUYsPGDZqVOMMwaHrhhYbzPB12RAjB+eedp/vMYDCIE/knlJeTRtaIYRiceeaZGD/+
                TrgSbDEhQylFaVkZXnjxJaz5ay0+nP8RBI15JCzLYujQ69Cy5UXRicDpRNZI7f1ThdwesSyLv9eXlzO1
                PACACy5oHM1ns6TajhiGQa9ePcDozLMDgO3bdyCo8zGRCgghuLDJBSApPL4nkc+QLvQ0ilOdAhAoRYin
                CPIigjxNEMqvhwRUCGGhfAJkbIQMQ3BedQ79G/mczRY1sKuCsBOtikeGEILqubnKy6YQEuzQmw6qokZG
                u46TJZFGWsvCiTQsVb9+PSCm51QvxDb6yt+shnPOOVtX83A4ZGkjNyPIGrEsixuuH4EWzZtrVuqUUnz/
                /Q+46qqBOHLkqPLnKCzLokWL5pj48IPweDwQpUnu6UardyaVUGm59u7duzXjJFKvdDJpT6UdEWm+kpH3
                CYXCKDhRAKpiR6mCEJLUB6saVLJZrfKcKrQ0is9pChwo5vHxxmJ8tL4YH20oxvz1RRXCh+uL8fHGUizc
                JWDhLgFf7OKxYCePb/cKKA6XVx5ywojkDLWr78GlZ2Y4h7NqIIpiSj3uk41W5ROLEYPXw85KvCppBANf
                S6kiViNKKQ4cOKC8pQIsyyEvPx8bNm7Epk2bsXnzlgph+/Yd2LVrd4Wwe/ce7NmzF/v3H8D+/Qewb99+
                7N9/AIcOHcLhw4dx8ODBaDhy5AiOHj0aDceOHUNeXh5OnDhRIWTorNiCNCRVWlKqvJwy5F41r9eLGTOn
                4bxGDTXLuyAIKCsr07TBGjVqYMrkifB6vdFn2WVH6W64ZYpLSnSHXwkh0cN29XTWIlV2RAhBw4bnGuqh
                EwQBhUWFtuQnm8QkaS3kD45U5J0eahrFlXiK8l6fwyURHCkTcKSUjwtHS3kc8wvIC1LkBSnyg8CJEHDI
                D/x0kEeIr3jSLQHg5QhuaFUDTWr7nCEyDbQqrlMNUUy/ccZiVyVelTSS0fpaSiWxGh07dlz5cxRKKUpL
                SzF69Bh07twFHS7thEs6dKwQOl/eBV26dq8QruhyJTpf3gUdO/0HnTpfgc6Xd0Gnzlfg0ssuR4dLO6Np
                s5bRcEGT5mh8QbNoOL9xUzQ6rwnObdi4Qujdux/C4bDyFStApWXq6UQQBLhcLtStUwfjxo3VPQJEC5fL
                hRuuH4E2bVorf7LNjuygrLQMPK89V5EQgjp1UzM/KlV2xHEc6urM2aKUQhQElJWqH5diBJ5XHzq1C1Gs
                6DOkk0QaJSjtBPKx4bKnZhRBpDhUBqzLEyCKFQ9dIyhfSTayVU3k+jjHGdKAShMKq0plZCd29djYrZEd
                8ah9LaUa2ZHMz9M+BZxKG/FFIpGEQbk7bLoCb3ADQLs0crlc6NmzB0aMGB5XoRuBEIJevXpg9OhbVfW2
                y47STSgUgqCzaIMQgtxq1ZSXLZNoTpxZCCGolqv/ThQUwaB2j5ceWjYYS7rLAk3hQa16KDVKueXyIrD6
                mIhdxRSCYmY4yxCcnevBrW1qwZ2GnafTLZSdiDatsJCpSnlHKbWlErdTI7sqCL1GI1VQSlFSmr6hpJOB
                XRrxPI/MzExMmvgQ2rdrZ6r8MQyD+vXrYcKEu5CR4dO0EbvsKJ2EwiHdhp4QguycHOXlpEj2o4IQgmoG
                3kkUKcKRsC0a2VHXURvnDMVqxKQ6A8snWxP8flREYai8c0nuiiKEgGGAVvUzcFWT6mBTPHmaSnsTpDpN
                Jwsq9cjZkZ505J1eBZRO7PqitVOjWDs61RGlM6iqGnZpJErnSk2c+CDcbrfh+FiWxZQpk9H4/PMNNTZ2
                2VG6oAZ3hHdxxo8jMkqyZUFrdWAsgnSMh5F7k6Wq1XVyPAyNOZ8rlRSFKX48ICAk9Sjz0pkeRJo83btx
                Lpqc5kv55Gm5G9tI4T8VkBvadGikRNYoVdjVu6CGKJ3Ple6ycCprdLIwMtR0qmKXRqIook2b1hhz+22G
                nBqGYTB40LUYNvQ6U0M3dtlROhAEY22By2U8P8yQTHvEGXwnKg0pWdXITD1dFes6nudBKKW0sLAQhJDy
                DKXAnmIRS/aLSHauK0uA5nU8uLJhFlwMQanUFV4uGFAYEjF9TTH2FAvytKSkOKu6G090bQDw5ePCPM+D
                FymW7yjCS8sOKm+vFHg4Bs9d3QTtz9FeQh6rkVEYhsHixUsw6pbbNDfNYlkW/fr1wbwP5kR3YDVbAHMV
                S+CDwSBuvOkWLFz4ZYXrsRBpw7pPP5mPtm3bGOp2zcrKMlWJ8zwfPTA1EYIgYMmSpRh92x2q9xBC0KNH
                d3z80TzNlRxmNRIEAQsX/g/j75qgWRlxHIf33n0H11wzECzLVrAjMyg1SsTKlb+je4/euuXlsks7YPbs
                9+Dz+ZQ/G9KopKQEZ57VEOGY4yBOZTiOwysvT8Utt9wMAGnVSEYURaxfvwHXDroOhw4d1s1HhmHQtcsV
                mDlzOqpXr15+ordB9OxIDY/HE1dGBEHAxElTMG3aO5rljGEY3HHHbXjwgft1yxPHccjKylJexp9/rsLA
                awYjT2OzS7fbjQ/mzkLHjpcZqoPMaAQAgUAg2h4ZJRKJYPxdE/C//32tWTe4XC7MnvUu+vfvB8QcDm2G
                pUu/x223j0EgEFT+FIVhGIwcORxvvvEaWJZFUVGRqboOGhppEWtHx48fx9BhI7Fp02bVeDmOwzvT38Lg
                wYN0y0wsFVQ3UgjMIFBg0/EwtuSFIb82H912H8jxMBjQOBMZHJOWniH5tNuqRKo1SoSsUVXhnzKX4kKm
                gqORPkZ6MCA5oSzLgktwmrXRwLKs5cBIE+KNBGX5SqdGlFJEIhG8/sZbOHz4iK4TBMlx+nHZcrwz411E
                IhHVxkQNu+2oKmFXe2S3RlWlroumQu7ySnXCIgLFdztLsbsgHO314aVJSiwBGlXnMKhJRloOZ41EImnP
                QDtJl0aJkDVKBiOVM0w0iskgpyfdFcSpptHJotzJ0NciIyMDEyc+hIkTH8LDDz+Ihx56APffdw/uv+8e
                PHD/vXjowfvx4AP34d577sa999yNu+8aj/Hj78S4cWMx5vbRGHP7aNx+26249ZZRuGXUzRg2dAiGDR2C
                664bhMGDr8W11w7EgAH9cdVV/dCvXx/07dsbffr0Qo8e3dG9+5Xo1q0runbtgh49uqNb1y7o2uUK/Ofy
                zujcqRM6deyIDh0uQYcOl6Bt29aoVauW8vXTppEoivjggw+x8IuFmj0GSgRBwLRp72DVqtWG7TMWu+xI
                xq547LDXdLRHifLHLo2qUl0XHRr75wqD3UUCFu8Tkh4akyEA6mRx6HkWiwzmH6PlOA4RnocgAv/d6sey
                fUEISUQaOzQmT8TkRYqfd5XgxR/2K2+vFJgZGpNhGCZaCLVgLA6N8TFdqxzHVfi3Gsru4kAggBEjb8Q3
                3yyqcD2W2KGxDh0uMZQmI8MusfA8H+1ehZQeUdqzAmkYGpMxolEyQ2Op0CgRdg2NhcNhNDrvAuTnn9Bs
                kGvXroXffl0Brzc+3xMNu+ih1MjI/A3OYJe+3DMEqUs/XRoBwO+//4E+ffvD7w/ovr8SQgjatWuL//vs
                Y9SsWdNQg6lnR2ok0sjM0NjYsbfjwQfu120E1TRavXo1rh44GMePq+9Z5Xa7MXvWu+jatYtuemBCI5lA
                IFBhYQDHcRA0jj2B5DTdMXY8Fi36VrNucLvdmPX+zOjQmBWNFi9ZijFjxpoeGov9Ta+ug4ZGWsTa0fHj
                xzFs+PXYuHGTalxcKobGYOIr3hSE4FgZj2X7IwjHPJ7nebg4DiwBep7rw5k5bMqHyJCuNJ1E5PQYqcCS
                hbehWxI2fsXwPA9iwyqYqqhRKiGEoGbNmsrLcYTDETBM+fBYqgMhBBzHweVygUswpGY2aH0Zp0ojKm3c
                +MSTTyMUCqs2CFpQ6UT2SZMfRVlZmfJnQ9hlR3L6rMajpUksvDSHJxUa6WG0ruM1nMRY1J5lVCMjDroW
                dtZ1Vsq7ERKWklRHRqVJ2AdKKdYcpxBiHl9e+FjkuAlub5WN05yT6g1BbdzjQzbcdCNXREYrL6sI0j4V
                6Y6nKmqUSk5voH92UTAYRCiUvh2bTyWNqHR21hNPPoWff16RVAMmCAK++GIhFi9Zqts7ocapYEecy6X7
                fpRSBPx+IAUaGUWvrqOUosyvv2M0IeVpVONU0KgykN7cUcCLFJvyBewroRVWiQmCAJeLQ46HwdXnZxia
                O+BgrycuJNiWXA8rPXGRSARMgomnqYbn+QpDGemismtklWQrPUIIzjjzDOXlOERRxKFDh3QbhGQ4VTQS
                RRGLFy/FW29N13WCjOhTUlKCSZMewd69ey3nb2W3I6/Hq+vYUEpRXFwS/XcyGplBr64rKIiZsqICwzDw
                agzX4xTQqDKQ3pxJQFgEfjwoIi9YseeJ53m4WBbNa7vQt5EPLvbUy8yTgeyJp7uQw8LXktbYthZyPOk2
                KLmCSHc8lVkjq1BpkmQyede4cWPdv6eUYtfu3br3JUtl14hSiry8PDzz7HMIhbR3SyaE4JL27XDBBY01
                00Olg2/H33UPioqKNZ+phV0NrRWNMjJ84DjtvKaU4sSJE3HtkVmNrKBW11FKcfy4+pJ/SDozhEGmoUOB
                1TUqT7f23xvFikaVAdvflgII8RS/HBYQFlGhZ0gUBXjdLlx5tg8X13GB0RHXoRxRmvBph+Ha9bWkVkGk
                Gl4aR083VVEjudvdSv4RQtC8WVPdvxVFEX///TdgYr6HVSqzRqWlZbh9zJ2aE0Uh5WtmZiYefvhBvPba
                y6hXr67ylgqIoohffvkVH338sebEZT1kO6psGuXk5Bhatn7k6NG4fDWrkVWUdR2lFCcKClBk4FR5luNQ
                zeA5aWoaCTqH0prFrEaVgfSW2gTIuh7xU/x2hIJX6CwIPHxuDv0aZaB2Rur3F6qqUGnWvh2Fj7d5UqHS
                cFONlSE8Kzga/QMhBM2aNdPd0ZdSilWr1iAUCql+0aaSyqiRKIqY9+GHWL58uWYvKyEEHo8b9947AS1b
                XoTG558fPZhVzeGklCIYDOKJJ57G6jV/aT5fD0EQKp1GPp8PtWvXVk0/pOft37c/2oDHYlSjZIm1I0op
                /vxjFQRBv17iOA41a9bQTF8slVGjykB6c0MFCkCkwNYCERvy43ewFgQedbJdGHNxNnI9J+UVT0ns9MSN
                dB0rKxUryF26Rg29slPZNEoFVjQihCArKxP16tXT/DtKKQ4dOoTjx4+rftGmmsqkkSiK2LFjJ6ZOfVn3
                lHGGYdCzZw/cdOP14KTVcDfddAPat2+rm2fFxcV46KGJOHz4cFJ2W9k0IoSgRYvmumVs1+7dCR0hGNAo
                Vch2BAA/r1ih+j6x1KtbF9nZ2ZrpU1LZNKoMpDcndBBBsC5PxLFAvNhUFNEgx40+jXwpP5y1KiP3bthR
                +PS6jsUkvi5jkSuIdBuuXVQmjVKFFY04jsPZZ52lW4kXFBRi167dgJQeuypxnGSNKKU4fvw4Roy8EUeP
                HtNtFGvVqok7xtwePYSVEILsrCxMffEF1K9fTzPPKKVYs+YvTJ8+A7zFM6tkKpNGhBC0bVvuCKqVM0op
                9u3bj4MHD6n2DqtplGp4nkcoFMZPP5U7QloQQtC2nb6Tm4hYjZLRWg8jGlUGmEAgAI/HUyEYGVNNBZRS
                BAWCpftFlIpc3Hu43S50PCsbvRplGhoiE0UxelZW7HPsKMDJEA6HEQgENIMyb7QCx5XnJcMwCIeNLT0W
                BAGBQAAsy8Y9TytwHAe32x33voFAQNeQZVwuV9xzlUGOx0hexYZIJBL3LGUwUt7l/NEKyudqhViNjBCb
                7lRqpAxGT4RnGAZutzthPEY0CgaDiEQiOPucs3XzwO/3Y+3addFyIucdISTuuXpBmTdaIVYj5XP0Qio0
                KikpwetvvIUtW7bo2pLX68VLU19Ey5YXwev1Rp/r8/nQqFFDjB59i245FwQB06bPwLwP56O0tLTCuxix
                I2V6PBoa8Tqr3mTk56gFPY2CwSDat2uj2waIooiPPvpEsy5KpJGRAEV7pBe2b9+OoqIiQw5K504dEQqF
                EEhCI8Hg9gmxdaDyWVpBTyOtoLQjNWc2Fo7j4p6jF5hQKASfz1chmDmML1kopSiLUKw8IoJ1e+GNfRev
                F7nZGejTKAPNarl157VTabMxSGPDJyM9ZpHfORQq3w1bLSg10gtutxsul0u3ApURRRGhUAgulyvuWVrB
                6/XC5/NBEIQK72vmME2PVGHrBa/XCwBxeaMVBEGIe44yGCkfcv5oBeVz9YLb7Tb8pVT+pVgeT6o0ShSM
                TphlGCYuHjkuGNQoEonggsbaK5sgVcBfff0NKKXRtMiVYiQSiXuuVlC+r16Q7chI3sWGZDXy+/347rvv
                MWPGu7o9NAzDYMSIYejbtzeys7Pjnp2VlYU7xtyOrl27aDoEVJov9NLUV7B16zb4/f5oeozYkTJoaSQY
                7C3mOC7uucqgpVE4HEZOTg7OOedszUaUUopPPv0M4XA4qoUyKDUyGqBoj7SC1+vFX2vXIRhU3+VZxufz
                ol27ttH8TUYjI8SmW/kcvaClkVaItSOv16tbV0DabdtsPPpPTTMUAKXAzhNhLN/jjzuFniEEDBUwpFkO
                sjyMrjPk8A/E5OnAViGEgE9wqKBRR8gMoihqVuYOiVHTKB2Y0ah164vBstrVEKUUW7duw1dffV2hTImi
                aMsQDCEEoigadlqtImvEcRx27tyFSZMfQVmZ9qZ6DMOgRo0auGfCXZra+nw+PPfs07oOgSiK2L1nD55+
                5jldB8wIlUEjlmXRtm0bzXRTSlFYWIgVK37RdNLSbUeCIOCrr77S/SAhhKBp06bIytJfOq9HOurpRGhp
                lEqsaJTe0mkQivKT6v86EsT6Y/GeMAFQy0MxpnUusqvY5OlkC7EeyVZkZogoDhU0surBCnIhtzNtVQWl
                RunCqEYNG56L888/X9cOeJ7HK6++jhMFBRWeKdg4H4XaMPGTUgq/34+3356OAwcOauYfIQTZ2dn4YO4s
                nHnmmZp5QAjBOeecjTvH3gFOYxUZpLQuXfodZr77nuGhdS1OtkYMw+CSS9rrppvneXy+4AtDw3bpsCNK
                KZYs/Q6rV6/RdU4YhkH7dm3BWlixqYQaOCcsVahplA7MaJRcDqYYkQIr9gVQGBSglIUQ4KxsoMe5mahq
                c6eTLciVCfmLNt1EIhFTHn+yaFWgpxqVSSOO4zBmzG26FWN5r9BWLFm8JO6LXbBpSbAdlbgoinj33ffx
                5f/+F5dOJSzL4vqRI9Cx42WG0s6yLEaMGIbBg67VTYP8Hlu2bE1JI3kyNSKE4KIWLZCVlaVrx4sWfYtV
                q1br5j1SbEeUUuTnn8DEiZMRieg7Ym63C5dc0j4l+ckL+vGlkkQapQujGiWfiylEpBQlIQGfbixGcSje
                I+YYgs5nuNG+ga/KOEP0FD+jJRGCtNFeujFayFNFVdPIjrzT04hhGHTpcgXOOuss5U8VoJQiHI7g6Wee
                x65d5UudY+ENHjCZLOmsxAVBwOrVa/D2tHd0D1RlGAYNGzbE6NGjwBrc1JIQAq/Xi0cfnYxzzz1XMw1U
                2tl48pRHcfz48bj8tsLJ0ogQgrPOOhMdOrTXTDMA+P0BjL1zvOFjXVJlR4Ig4MP5H2Hv3n26ThghBPXr
                N8DFF1+c9rxMF0qN0okRjSqVIwRpmOxEQMCKfX4IioJIALhZ4JrGXpyb6zK0kuxUQHYcTtVCrYRSCsHg
                SoRkkRvadOedbLTpjscuZI30emxSgZ5GmRkZ6N69m+rvMpRS7N27F3eOuwv5iiMRYKMdpaMSL3f0wnj6
                medQUFCg63hUr14d786cprsPkxKGYdCgQQOMG2dsiGzt2nWY+tKrCIe1HTOj2PWRpNSIYRg89OADcEtb
                C6hBKcWuXbvxxptvIxKJ6KY5FXYkiiI2bNyIqVNfNpTPLMtiwoTxyM7W7+GqzCg1ShdGNKp8jhAtHyLb
                cDSINYdDcZstEgBZLgYDG2cg213pXt8yvE1HStgFpRSCqP1lkyr0eh1SRZXUyMDXUirQ0sjlcmH4sKHI
                yMjQzVtRFPH773/g6aefRWlpaVyjYZdGqa7E/X4/Jk951PD8kNG3jsJZZ51laWiEYRhce81AQ0NkgiBg
                4cIv8dPPK3R7KozCx2wcmE5iNSKE4Oyzz0LPnt1108zzPGbOfA+zZs8xtHorWTvauHETrh95E/Lz83W1
                B4AWLZqjZw/9dJwKpNqO1NDTKP2l0SICBX7aW4YdJ+In6xECnJPL4sYWWfBy6a3w7MSuStwulI1UOjEz
                MS4ZqppGoihqVhCpRE0jIu3+e8+EuwxViJFIBLNnz8X4uyagsKgorvGwQyNBEHD06FFs2bo16UZdFEV8
                //2PmDdvflxalDAMg2bNmuKGG8p3j7YKy7IYP34sGjfWnqhOKUVJSQnuuec+7N9/QPf9jJKq5+ghx8NK
                k4qHXDcYPp9PeVscoVAIkyZOwZw5HyBkYG8tK3ZEKcXBgwcx6pbbsHvPHkP1JcuyGDrkOmRkZCh/soze
                CrV0E6tROtHSKDkLTjNhgeKnvWUoDtMKk6cJAJYQnF+dw+VneqvMfCHEfC1pVU4OidHqdUglVU0jva+l
                VKKmEcuyGDv2Dlza4RLdCpFKw0jffPMtxo27G2vW/IWQ4kT2VGskiiJ4noff78eqVavx5lvTcM21Q7Bl
                c/lmh3rvrAalFHv37sPjjz+ZsIcrFoZhcMbpp+Od6W8nvWyaEIJ69eph3Lix8Hq9ms+i0nyhSZOnoLik
                RPlzpUcepuc4Dm3btsGAAf11hwUppSjz+zHlkcfw7HMv4PDhw9HnqGHUjiiliEQi+GbRIvTq3Q+bN28G
                b2ClGsMwaHnRRejVqycgLTRIBVppsgs5b63akVHUNKrUjhClQJ5fwKK9AsJC+fyhWFwsQe+GPjSu4Srf
                X0h5wymKYNNch3RzMgxMraFNNXZrlGyvgx5yBZHuiggqGjEMg5ycbDz77FOGNk6TG5MffvgRN9w4Cq+8
                8hr8fj94no92t5vViErLiOUvR57nEYlEEA6HsW3bdrz66uvo3qMPho+4AS+++BL27NkTvRcWvmgppSgr
                K8PYO8dj2/btur0kLMvilltvxjnnnG06rkSwLItePXtg1KgbdfNJFEUsWrQYC79YqOsQVEbkvPX5fHj0
                kSlo0aK5bhkDgNLSUrz00isYNHgoNm/egkgkopl+tYY29reCgkLcf/9DuPnm0di5c5chJ4gQgpo1a2Dm
                zGmoVi0HJGbPqaqCXT1DiTTSLwknGQqgMEyw5nh55RYLAeDlCK5vnoX62RyYKtQ1lOovWj3SEY/cQNiN
                XRWE3RrZUUHoNcapIpFGhBC0bNkSc2a/j9NOO63Cb2pQSnHixAm88ebbuKLLlXjhhan4+ecVOHHiBGBC
                I57ncezYMaxfvwHfffc95s6dh8cefxJDh45Ay1Zt0LVbD7z8ymvYtWsXiouL48q2FWdIEATM+3A+Vq5c
                Gfc8JQzDoFu3rhg6ZAiQwt4Al8uFW28ZhaZNL9R1DILBIB56eDJ+/W1lXF18KiBI+xllZWXioQfvR1ZW
                lm6aIZWNNWv+QufLu2DcuLuxfPnPKCkpVd4WRbajWI1EUcTmzVvwxhtvotuVPTDz3fdQXFxs2N44jsO9
                90xA7dq1Kzw3kR2lC2LDij8rdmQFpUb6peAkI0+eXp8vYkdR+f8rb8j1MhjcJAMMACbNGWgndn2hyxip
                FE4VeJtOjLZLI7nCTLdGdjZwiTRiGAbdu3fDE48/qrvCJxZRFHHgwEFMmz4Do24Zjcv/0w1XDxyEF16Y
                igVfLMS6dX9j9+7d2LNnL1b+/gf++/kCvPTSqxg7dhy6d++Nxhc0Q+s2l6B7j94YNnwk7p5wL1577Q0s
                +nYxDhw4GO1l0sofuRI3opEoiti4aRMee/QJBIMVh/US0ahhQzz/3NPIyPBFv2iVeWcFQghq1aqFiQ8/
                CJdLe7gI0in1jz/+JAoKCw034pUJQdrP6LLLLsW0t980fMQEpRSBQAAfzv8It46+DV27dcfkyY9i5crf
                UVpahmAwiJB0pId81l5ZWRn27duPmTPfw3+u6Iau3Xrg0ceexNat20zlHcdxuPXWWzBkyOCEmieyIzMY
                nSNEbRi6gkk7Sga5N5dlWTAcx+ka4cmGUgpeBH45LOKIX9ErRAgYApxfw4WBjTPAonxfnqqC7PGnWyP5
                +emOx07kL8B0Y5dGcgWR7njsJJFGHMdhyJDBmPb2m6hfv77hCpFSCp7nUVbmR35+Pv7440+88ebbuPPO
                u9D/qoG4okt3tLq4LXr27IObb74Vjz3+BObMnYdffv0Vhw8fRn5+PoqKilBW5kc4HAYfM8xmFCMaUUpx
                6NAhjB8/ASU684IIIXC73Rg37g7k5uZG84pKTpky76zAMAwuvbQDxtx+G9xu9SXGkBqP33//A6+9+rqh
                pd6VEUEaFunVqwcef2wKfD7tOVKxCIIAvz+AgwcPYfacubhuyHC0aXsJevfpj2HDR+KGG2/GyOtvxMBr
                BqNjp//gP1d0ja4GLCwsNHUGIyRbGD58KO6/b4Lmh0EiOzKMCQ2rWl0XtaNIJEJLS0uj2+GLFNhdJGDR
                nkh878tJhhDgtAwWw5tlgyXqlYC8LbwoiuBFih+3FeDFH/Yrb6sUeDgGT/c/H+3Orqb8qQKxGpnhq6++
                xujb7tD0+lmWRd++vTFn9vuIRCJgGMaUsUI6/ToWv9+Pnr364q+/1la4HgshBC6XC//9v0/Qrl1bQw2e
                2+02dJ8MlSbWquWbIAhYvHgJRt1yG3iVsXpCCLp3vxIfzpsDj8ej/DmKWY0EQcCCBQtx57i7ooafCI7j
                MOOdtzFw4NVgWRbBYDAlGiXi99//QK/e/XTLS8fLLsXcubMSrl5JlUaCIOCnn1bg5lG3IhAIaObRycDl
                cmHmjGkYMOCquC9lLY14nsezzz2PadNmaOYzpLweMWI4pr74XEL9Yus6MyTS6OjRoxh83TCsXbtO83my
                3b7xxqvo36+v5tAMy7Jx+7cIgoDJUx7FO+/M1Ew/wzC4884xePihBzXjgHSvkcOTYwkGg+B5HgsWLMS9
                9z2AUCikmW47IYSAZVncMupmPPbYFENbS6jZkR7Tp7+Dp595XnOrAIZhMHz4ULz+2itgWRZlZWWm6jok
                oZFsR8ePH8fg64Zh48ZNqvFyHId3Z07HVVeVT4g3CiPfLAgCBGmCYGWrcGQoBY77BXy9ww+RcOC4xIEQ
                Eq0g5K+6ygzLsnFpUAYoNDISRBOrWQgh0XjkjcSUz9MKyvflOA7UYL6bSRPDMHHxaAUinX4NqSwkCkbK
                u5w/WgEWNTJCbBlBCjVSBqPlhUrDM8o4+BRqRClFx46X4vPPP0WHDpfoNgQnAzXbhYpG4XAYCxd+iXff
                naXpBEBqOC66qAWefuoJZGRkxMUh511sXWc0JNKofv36ePaZp5CTUz4ZVw25wX311dexf//+uGfHBkiN
                kzIonTA1RGm1nl4QpfkeZgIkux44cADefPM1nH56A8PvlW5ycnLwxBOP4vnnn0FOTg5cLlfc+yuDmh3p
                BaPElhlYrOuU76wXoLAjNQcoFkHq8TMToqqL0inBWgZQGRApsLMggrVHgrqLxHiTJ9BWduzSiCaY7JdO
                7IiHT3Ic3ShVVSM7SKQRIQRNL7wQc+e8j3Hj7oDH46k0jZWezkqNRFHEnj178dzzL2p+fcu4XC5MnPgQ
                qlfP1U1zKuo6QgguvbQDJk16CJzO8nIA2LZtOx56eHLc1gWpRO8dkoVKQyN9evfC0iXf4vLLOxueN5QO
                WJbFhU2aYNE3X+L220bD5XKZfpdEdqSFoLEKTouqVNdVsC6jX6cnG0Gk+PWAH9vzwxB1BAyHw7qVyKmE
                XRrJHng6C59MRGWjvVQjfymkm6qokV0k0ohhGHi9Xtwz4W68/94MdOlyBTJ8vpNm1xzHoWbNmhg16iZc
                dtmlmu8ha8SyLAKBAF54cWp08rUWHo8HEyaMx5XduhpuaMLhcFzemYVlWVw3eBA6XKJ/LpcgCPj55xWY
                NWuu4a/1ygqlFNWr52L6tLfwzNNPolWrlgmHD9MBkXqbGzY8Fw/cfy8+/HAOzjzzTEtOkEwiO1JDTGIO
                jF45ThWyHVnNDz0SqEzBMAyINCenMgYQIMRTLNlZiny/thCEEIBSMIRUzsCQ8jSZgNJyjezAjEEpMVox
                Ehv3xDD7tWSVU0WjykgijQgh8Hg8uOKK/+DdmdPx5puv4/TTG8DtdoPV2QMnWRiGASvNdcnMzMDIkcOx
                ZvUfeOH5Z1G3bl1DcYfDYbz77vv4+utFukOxhBC0b98O48bdqTlBVkkq7IhIq8heffVl+Hw+3bh5nsfb
                06bj6NGjaWkU7bQjURRRo0Z1DBkyGJ//91M888xTqFPntLSUMUIIGIaBy+VCdnY2xt4xBv/78guMHTsG
                derUiSv/VkhkR4kwWk+rYadGyb6rGgnfPoOlOL8Gi/OrEdVwQXUWzWp7TIULqid+ZuNcJu5abFA+p1lt
                D5rW9uDsXBeOlmmPcTKEoE6OC1c0ykHX83NxRaMc1dC9SU30uLCW4dC9Sc24Z1zRKAddzqsWdy02dGtc
                PfqMbhfUQs1McxPIIBmtkUKeLFTauM58XAS8gQo/lmQrcaMICZYeK98lFehpJMepF7fe79Y1qrwk0ggx
                DlHPnt2x4udlmD37PQwdch3q1q2jm09mIdKk4BYtmmPUqJswc8Y0rFu3Bm+9+TpOO63ifi56rF69BrPn
                6PecEEKQlZWFyZMeRm417QUUaiRrR4QQNG58Ph59dDJ8vvgJ2rFQSpGXl4fbbh+LvLw8zbRZRc+OUoVs
                Ry6XCx6PB8OHDcH33y3GG2+8iuuuG4yzzjorJe8hO5t9+vTCM08/ie+/+xYPPngfqlfPTbnDpWZHsRiO
                T0NauzRKF4RSSgsLC6MXKAVQ3okChiGqXj7HccjKylJe1qS0tBS8yuQsRmWFBQDk5uYqL0mU96YoZQwE
                AtHzYWS7FKSlphzHqU5SzMrKMlWB8DyP0tLEG2u5XC7VeDweT/S8GwKAkHKHTYtYjWLRyjeO4+D1eiGK
                ouo9kAyBZVmw0mqAVGjE8zw++uhjnDhRUOG6TCQSAS9N2uzfvy/q1ClvyOzWKBwOY8+evViyZGmFSpzj
                uApzLs4++2z07dtb09jNakSlk65/+eVXzQaEEIIePbrj/PPPAyEkDXb0D7w0qVEURQQCgehE3FiItKSb
                qizfTrVGamXB7XbD4/FAlPYD+XHZcsyb9yF+/nkFAoEAeL58Iqeo2ANILmdE+iovD+U2wDAszjjjdLRr
                1w6dO1+GTh07wufzITs7O3pvojQridWIUoolS5Zi7959EKV5FWp6+3w+XHRRC3TseJmhPIyt62JJhR2V
                lJRgwYKFKCgogCiKCeOBNJxGKUWHDu3RrFmzCvkTW9fJUGmivVq9VFRUFP1/uV6StUp0P9LYHsnlRi5j
                mzdvwZKl3+Hbbxfj4MFDEAQeglD+m3w/YsoYwzDguPI05ObmonOnjujXry/atm0Dt9sNt9sNQWXpuxGN
                YrFqR+vXb8C6dX/r9lReeGETdO3aBQzDmK7rkAKNAoEAvvrqG+Tn5wNSHivtiBCCK6/shpYtLzLVSxXn
                CClRS1iyiUqEWlxGKvBY1CoHGY7jEr5HKgseNOJJVDnocappJFceyoIqE9vIJmpc1PIuHRrJS05j31Wp
                kfyOyveMxYpGDMMgMzNTNZ8gGXdsHqVKIz1OJTuS9RMEAWVlfuzbtw+HDh9Gfl4+ikuKEQqWL40OBoNg
                WRYutwtejxc+nxfZ2TnIyclGjRo1ULNmTWRklM8/YqQhsVTYUWyjCg2NqlevHi1nWmVNJp0axToBehq5
                XC4I0maFsSjtyAhW7CgVGilJFJcoisjJyYEgCMjLy8Ohw0eQn1e+/5Tf7wcvlD+PIQx8Ph9yquUgKzMT
                1atXj/YiymVL1jcZjWLR00gtHvmDQq8OkushnCSNYsujjDIu+T1r1KgRvWYEXUcIKhmYbKLUUCYMaajA
                oZKmVBc8qMST6soBKvE4GjkaxeJo5Ggk42jkaCTjaKQyR0gJn+SYsxlEqes43diVpqoWDxyNLGNXPHA0
                soxd8cDRyDJ2xQNHI8vYFQ9SpJEhRwgxCUs2QqMou1jTgV1i8SnY48MIjkbWcTSyjqNRcjgamcfRyDqO
                RvGY+kteWo6X7oTJY4HJJMwocprSjV175TgaWcfRyDqORtZwNLKOo5F1HI0qQiKRCDWyy2ksLMtCEISE
                Z99oETZ54ByR9sXIzMxU/qRJJBLRnQGvhEgrYcwIJopiwlU1WshCWTlzxQyORuU4GjkaxeJo5Ggk42jk
                aCRDCgoKqNmJRZDEDQQCpl7S7OQvSJ6e1pLuRFiZ/AUAZWVlqksME8FZmPwFqRCZFdjRqBxHI0cjGUcj
                RyMZRyNHIxkrGlnrR0qwnC5dyB6e2cywAqXUtnjMePpWcTSyjqORdRyNrOFoZB1HI+s4GgH/D5Kh7Cab
                ncBPAAAAAElFTkSuQmCC
</property>
        </structure>
    </list-property>
</report>
