PROCEDURE "ADD_USER" (
    IN USER_DATA NCLOB,
    OUT RESULT_MESSAGE NVARCHAR(500)
)
AS
BEGIN
    DECLARE NAME NVARCHAR(100);
    DECLARE DESIGNATION NVARCHAR(100);
    DECLARE CREATED_BY NVARCHAR(50);
    DECLARE CREATED_ON DATE;
    DECLARE STATUS INTEGER;
    DECLARE CREATED_ON_STR NVARCHAR(30);

    -- Parse JSON input fields
    SELECT JSON_VALUE(:USER_DATA, '$.name') INTO NAME FROM DUMMY;
    SELECT JSON_VALUE(:USER_DATA, '$.designation') INTO DESIGNATION FROM DUMMY;
    SELECT JSON_VALUE(:USER_DATA, '$.createdBy') INTO CREATED_BY FROM DUMMY;
    SELECT JSON_VALUE(:USER_DATA, '$.createdOn') INTO CREATED_ON_STR FROM DUMMY;
    SELECT CAST(JSON_VALUE(:USER_DATA, '$.status') AS INTEGER) INTO STATUS FROM DUMMY;

    -- Convert createdOn string to DATE, if present
    IF CREATED_ON_STR IS NOT NULL THEN
        -- Assuming the date format in JSON is 'YYYY-MM-DD'
        CREATED_ON := TO_DATE(:CREATED_ON_STR, 'YYYY-MM-DD');
    ELSE
        CREATED_ON := NULL;
    END IF;

    -- Validate mandatory fields and insert
    IF (NAME IS NOT NULL AND DESIGNATION IS NOT NULL AND STATUS IS NOT NULL) THEN
        INSERT INTO "USER" ("NAME", "DESIGNATION", "CREATED_BY", "CREATED_ON", "STATUS")
        VALUES (:NAME, :DESIGNATION, :CREATED_BY, :CREATED_ON, :STATUS);

        RESULT_MESSAGE := 'User created successfully';
    ELSE
        RESULT_MESSAGE := 'Invalid input: Name, Designation, and Status are required.';
    END IF;
END;
